# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Body {
  id: String!
  weight: Float!
  bodyFatMass: Float!
  skeletonMuscleMass: Float!
  height: Float!
  date: DateTime!
  memo: String
  user: User!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Diary {
  id: String!
  diary: String!
  rating: Int!
  user: User!
}

type ExercisePart {
  id: String!
  name: String!
  exercises: [Exercise!]!
}

type Exercise {
  id: String!
  exerciseTime: String!
  exerciseParts: [ExercisePart!]
  cardio: String
  rating: Int!
  user: User!
  memo: String
}

type Hobby {
  id: String!
  users: [User!]!
  name: String!
}

type Meditation {
  id: String!
  meditationTime: String!
  rating: Int!
  user: User!
  memo: String
}

type Smoking {
  id: String!
  rating: Int!
  user: User!
  memo: String
}

type Study {
  id: String!
  studyTime: String!
  rating: Int!
  user: User!
  memo: String
}

type User {
  id: String!

  """shacking fucking ass~~"""
  name: String!
  age: Int!
  school: String!
  email: String!
  hobby: [Hobby!]
  diary: [Diary!]
  exercise: [Exercise!]
  meditation: [Meditation!]
  body: [Body!]
  smoking: [Smoking!]
  study: [Study!]
}

type Query {
  fetchUsers: [User!]!
  fetchUser: User!
  fetchUsersWithDeleted: [User!]!
  fetchBodiesByUser: [Body!]!
  fetchBodyById(bodyId: String!): Body!
  fetchBodiesWithRemoved: [Body!]!
  fetchDiaryById(diaryId: String!): Diary!
  fetchDiariesByUser: [Diary!]!
  fetchDiariesWithDeleted: [Diary!]!
  fetchMeditationById(meditationId: String!): Meditation!
  fetchMeditationsByUser: [Meditation!]!
  fetchMeditationsWithDeleted: [Meditation!]!
  fetchSmokingById(smokingId: String!): Smoking!
  fetchSmokingsByUser: [Smoking!]!
  fetchSmokingsWithDeleted: [Smoking!]!
  fetchStudyById(studyId: String!): Study!
  fetchStudiesByUser: [Study!]!
  fetchStudyWithDeleted: [Study!]!
  fetchExercisesByUser: [Exercise!]!
  fetchExerciseById(exerciseId: String!): Exercise!
  fetchExercisesWithDeleted: [Exercise!]!
}

type Mutation {
  login(email: String!, password: String!): String!
  restoreAccessToken: String!

  """shacking fucking ass~~"""
  createUser(createUserInput: CreateUserInput!): User!
  removeUser: User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  restoreUser(userEmail: String!): Boolean!
  createBody(createBodyInput: CreateBodyInput!): Body!
  removeBody(bodyId: String!): Body!
  updateBody(bodyId: String!, updateBodyInput: UpdateBodyInput!): Body!
  restoreBody(bodyId: String!): Boolean!
  createDiary(createDiaryInput: CreateDiaryInput!): Diary!
  removeDiary(diaryId: String!): Diary!
  updateDiary(diaryId: String!, updateDiaryInput: UpdateDiaryInput!): Diary!
  restoreDiary(diaryId: String!): Boolean!
  createMeditation(createMeditationInput: CreateMeditationInput!): Meditation!
  removeMeditation(meditationId: String!): Meditation!
  updateMeditation(meditationId: String!, updateMeditationInput: UpdateMeditationInput!): Meditation!
  restoreMeditation(meditationId: String!): Boolean!
  createSmoking(createSmokingInput: CreateSmokingInput!): Smoking!
  removeSmoking(smokingId: String!): Smoking!
  updateSmoking(smokingId: String!, updateSmokingInput: UpdateSmokingInput!): Smoking!
  restoreSmoking(smokingId: String!): Boolean!
  createStudy(createStudyInput: CreateStudyInput!): Study!
  removeStudy(studyId: String!): Study!
  updateStudy(studyId: String!, updateStudyInput: UpdateStudyInput!): Study!
  restoreStudy(studyId: String!): Boolean!
  createExercise(createExerciseInput: CreateExerciseInput!): Exercise!
  removeExercise(exerciseId: String!): Exercise!
  updateExercise(exerciseId: String!, updateExerciseInput: UpdateExerciseInput!): Exercise!
  restoreExercise(exerciseId: String!): Boolean!
}

input CreateUserInput {
  name: String!
  age: Int
  email: String!
  school: String!
  password: String!
  hobby: [String!]!
}

input UpdateUserInput {
  name: String
  age: Int
  email: String
  school: String
  password: String
  hobby: [String!]
}

input CreateBodyInput {
  weight: Float!
  bodyFatMass: Float!
  skeletonMuscleMass: Float!
  height: Float!
  date: DateTime!
  memo: String
}

input UpdateBodyInput {
  weight: Float
  bodyFatMass: Float
  skeletonMuscleMass: Float
  height: Float
  date: DateTime
  memo: String
}

input CreateDiaryInput {
  diary: String!
  rating: Int!
}

input UpdateDiaryInput {
  diary: String
  rating: Int
}

input CreateMeditationInput {
  meditationTime: String!
  rating: Int!
  memo: String
}

input UpdateMeditationInput {
  meditationTime: String
  rating: Int
  memo: String
}

input CreateSmokingInput {
  rating: Int!
  memo: String
}

input UpdateSmokingInput {
  rating: Int
  memo: String
}

input CreateStudyInput {
  rating: Int!
  studyTime: String!
  memo: String
}

input UpdateStudyInput {
  rating: Int
  studyTime: String
  memo: String
}

input CreateExerciseInput {
  exerciseTime: String!
  exerciseParts: [String!]
  cardio: String
  rating: Int!
  memo: String
  userId: String!
}

input UpdateExerciseInput {
  weight: Float
  bodyFatMass: Float
  skeletonMuscleMass: Float
  height: Float
  date: DateTime
  memo: String
}